# Generated by Django 4.2.2 on 2023-08-10 00:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('owner', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.entity')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('game.entity',),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.entity')),
                ('personality', models.TextField(max_length=200)),
                ('carry_limit', models.PositiveIntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('game.entity',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.entity')),
                ('category', models.CharField(blank=True, choices=[('house', 'house'), ('store', 'store'), ('secret', 'secret'), ('other', 'other')], max_length=20)),
            ],
            bases=('game.entity',),
        ),
        migrations.CreateModel(
            name='WorldMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
        ),
        migrations.CreateModel(
            name='Mystery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('connections', models.ManyToManyField(to='game.mystery')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
        ),
        migrations.AddField(
            model_name='entity',
            name='tags',
            field=models.ManyToManyField(to='game.tag'),
        ),
        migrations.AddField(
            model_name='entity',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world'),
        ),
        migrations.CreateModel(
            name='Clue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
                ('mystery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.mystery')),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preposition', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('noun', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('travel_seconds', models.FloatField(blank=True, default=10.0, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('noun_slug', models.SlugField(max_length=20)),
                ('hidden', models.BooleanField(default=False)),
                ('discoverable', models.BooleanField(default=True)),
                ('end', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_paths', to='game.location')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_paths', to='game.location')),
            ],
            options={
                'unique_together': {('start', 'end', 'preposition'), ('start', 'preposition', 'noun')},
            },
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('slug', models.SlugField(blank=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='game.entity')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='game.world')),
            ],
            options={
                'ordering': ['entity', 'name'],
                'unique_together': {('world', 'slug')},
            },
        ),
        migrations.AddField(
            model_name='location',
            name='arrive_clue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations_arrive', to='game.clue'),
        ),
        migrations.AddField(
            model_name='location',
            name='search_clue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations_search', to='game.clue'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.entity')),
                ('kg', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('text', models.TextField(blank=True)),
                ('unlock_description', models.TextField(blank=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='game.character')),
                ('inspect_clue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspectable_from', to='game.clue')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='game.location')),
                ('text_clue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='readable_from', to='game.clue')),
                ('unlocks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.block')),
            ],
            bases=('game.entity',),
        ),
        migrations.CreateModel(
            name='ClueKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.clue')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=200)),
                ('success', models.BooleanField(default=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.character')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='path_taken',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.path'),
        ),
        migrations.AddField(
            model_name='character',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='game.location'),
        ),
        migrations.AddField(
            model_name='character',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='block',
            name='paths',
            field=models.ManyToManyField(to='game.path'),
        ),
    ]
