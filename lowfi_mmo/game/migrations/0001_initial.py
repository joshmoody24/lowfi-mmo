# Generated by Django 4.2.2 on 2023-06-19 08:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('meters_per_unit', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('elevation', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='ClothingAccessory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('appearance', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClothingBottom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('appearance', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClothingTop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('appearance', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveIntegerField(default=10.0)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('description', models.TextField(blank=True)),
                ('weight_kg', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('attack', models.PositiveIntegerField(blank=True, null=True)),
                ('defense', models.PositiveIntegerField(blank=True, null=True)),
                ('item_type', models.CharField(choices=[('default', 'default'), ('clothing_top', 'clothing_top'), ('clothing_bottom', 'clothing_bottom'), ('clothing_accessory', 'clothing_accessory')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('description', models.TextField(blank=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.area')),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_distance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('movement_cost_multiplier', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('name', models.CharField(blank=True, max_length=30)),
                ('end', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_paths', to='game.location')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_paths', to='game.location')),
            ],
            options={
                'unique_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorldMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
        ),
        migrations.CreateModel(
            name='Traveler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
                ('path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.path')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Readable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=500)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance', models.TextField(max_length=100)),
                ('personality', models.TextField(max_length=100)),
                ('clothing_accessory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.clothingaccessory')),
                ('clothing_bottom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.clothingbottom')),
                ('clothing_top', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.clothingtop')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Npc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance', models.TextField(max_length=100)),
                ('personality', models.TextField(max_length=100)),
                ('description', models.TextField(max_length=200)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('dropped_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.location')),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.inventory')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='game.item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_hp', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('hp', models.PositiveIntegerField(default=10)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entity',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world'),
        ),
        migrations.AddField(
            model_name='area',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world'),
        ),
        migrations.AlterUniqueTogether(
            name='entity',
            unique_together={('world', 'name')},
        ),
    ]
