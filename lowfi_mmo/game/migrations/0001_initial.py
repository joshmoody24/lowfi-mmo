# Generated by Django 4.2.2 on 2023-06-24 22:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('meters_per_unit', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('elevation', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPrefab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('description', models.TextField(blank=True)),
                ('weight_kg', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('readable_message', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('description', models.TextField(blank=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.area')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'area')},
            },
        ),
        migrations.CreateModel(
            name='NpcPrefab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance', models.TextField(max_length=200)),
                ('personality', models.TextField(max_length=200)),
                ('description', models.TextField(max_length=200)),
                ('carry_limit', models.PositiveIntegerField(default=10)),
                ('name', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('appearance', models.TextField(max_length=200)),
                ('personality', models.TextField(max_length=200)),
                ('description', models.TextField(max_length=200)),
                ('carry_limit', models.PositiveIntegerField(default=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('owner', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WorldMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.characterinstance')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.itemprefab')),
            ],
            options={
                'unique_together': {('item', 'character')},
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.DurationField()),
                ('setting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.location')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
        ),
        migrations.AddField(
            model_name='characterinstance',
            name='items',
            field=models.ManyToManyField(through='game.InventoryItem', to='game.itemprefab'),
        ),
        migrations.AddField(
            model_name='characterinstance',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.location'),
        ),
        migrations.AddField(
            model_name='characterinstance',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world'),
        ),
        migrations.CreateModel(
            name='PlayerInstance',
            fields=[
                ('characterinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.characterinstance')),
                ('base', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='traits', to='game.player')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('game.characterinstance',),
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9\\s\\']*$", 'Only alphanumeric characters, spaces and single quotes are allowed.')])),
                ('custom_distance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('movement_cost_multiplier', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.CharField(blank=True, max_length=100)),
                ('end', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_paths', to='game.location')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_paths', to='game.location')),
            ],
            options={
                'unique_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='NpcInstance',
            fields=[
                ('characterinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game.characterinstance')),
                ('prefab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.npcprefab')),
            ],
            bases=('game.characterinstance',),
        ),
        migrations.CreateModel(
            name='DroppedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.itemprefab')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.location')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.world')),
            ],
            options={
                'unique_together': {('item', 'location')},
            },
        ),
        migrations.CreateModel(
            name='ConversationParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_delay', models.DurationField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.characterinstance')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='game.conversation')),
            ],
            options={
                'unique_together': {('conversation', 'character')},
            },
        ),
    ]
